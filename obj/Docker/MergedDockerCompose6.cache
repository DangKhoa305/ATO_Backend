name: dockercompose17576670657091913488
services:
  ato.cache:
    image: redis:latest
    networks:
      app-network: null
    ports:
      - mode: ingress
        target: 6379
        published: "6379"
        protocol: tcp
    restart: always
  ato_api:
    build:
      context: C:\Users\Khoa\Source\Repos\ATO_Backend
      dockerfile: ATO_API/Dockerfile
      args:
        BUILD_CONFIGURATION: Debug
        LAUNCHING_FROM_VS: "true"
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: ATO_API
    container_name: atoapi
    depends_on:
      atodatabase:
        condition: service_started
        required: true
    entrypoint:
      - dotnet
      - --roll-forward
      - Major
      - /VSTools/DistrolessHelper/DistrolessHelper.dll
      - --wait
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "5000"
      ASPNETCORE_HTTPS_PORTS: "5001"
      CONNECTIONSTRINGS__DefaultConnection: Server=atodatabase;Database=ATO_Database;User Id=sa;Password=ATO123456;TrustServerCertificate=True;
    image: atoapi
    labels:
      com.microsoft.visual-studio.project-name: ATO_API
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages --additionalProbingPath /.nuget/fallbackpackages  "/app/ATO_API.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: dotnet --roll-forward Major /VSTools/DistrolessHelper/DistrolessHelper.dll --stop dotnet
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      app-network: null
    ports:
      - mode: ingress
        target: 5000
        published: "5000"
        protocol: tcp
      - mode: ingress
        target: 5001
        published: "5001"
        protocol: tcp
    tty: true
    volumes:
      - type: bind
        source: C:\Users\Khoa\AppData\Roaming\Microsoft\UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Khoa\AppData\Roaming\ASP.NET\Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: volume
        source: dataprotection-keys
        target: /root/.aspnet/DataProtection-Keys
        volume: {}
      - type: bind
        source: C:\Users\Khoa\vsdbg\vs2017u5
        target: /remote_debugger
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Khoa\AppData\Roaming\ASP.NET\Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Khoa\AppData\Roaming\Microsoft\UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\linux-x64\net8.0
        target: /VSTools
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\HotReload
        target: /HotReloadAgent
        read_only: true
        bind:
          create_host_path: true
  atodatabase:
    container_name: atodatabase
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_DB: ATO_Database
      MSSQL_PID: Express
      SA_PASSWORD: ATO123456
    image: mcr.microsoft.com/mssql/server:2019-latest
    networks:
      app-network: null
    ports:
      - mode: ingress
        target: 1433
        published: "1433"
        protocol: tcp
    restart: always
networks:
  app-network:
    name: dockercompose17576670657091913488_app-network
    driver: bridge
volumes:
  dataprotection-keys:
    name: dockercompose17576670657091913488_dataprotection-keys
    driver: local